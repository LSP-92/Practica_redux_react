{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/shared/ConfirmationButton/ConfirmationButton.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport T from 'prop-types';\nimport { Button, Modal } from 'antd';\n\nfunction ConfirmationButton({\n  confirmationProps,\n  onConfirm,\n  ...buttonProps\n}) {\n  _s();\n\n  const [visible, setVisible] = useState(false);\n\n  const handleClick = () => setVisible(true);\n\n  const handleCancel = () => setVisible(false);\n\n  const handleOk = () => {\n    setVisible(false);\n    onConfirm();\n  };\n\n  const {\n    content\n  } = confirmationProps;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      ...buttonProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: visible,\n      onOk: handleOk,\n      onCancel: handleCancel,\n      ...confirmationProps,\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmationButton, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = ConfirmationButton;\nConfirmationButton.propTypes = {\n  confirmationProps: T.shape({\n    content: T.node\n  }).isRequired,\n  onConfirm: T.func\n};\nConfirmationButton.defaultProps = {\n  onConfirm: () => {}\n};\nexport default ConfirmationButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmationButton\");","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/shared/ConfirmationButton/ConfirmationButton.js"],"names":["React","useState","T","Button","Modal","ConfirmationButton","confirmationProps","onConfirm","buttonProps","visible","setVisible","handleClick","handleCancel","handleOk","content","propTypes","shape","node","isRequired","func","defaultProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,MAA9B;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,iBAAF;AAAqBC,EAAAA,SAArB;AAAgC,KAAGC;AAAnC,CAA5B,EAA8E;AAAA;;AAC5E,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMU,WAAW,GAAG,MAAMD,UAAU,CAAC,IAAD,CAApC;;AACA,QAAME,YAAY,GAAG,MAAMF,UAAU,CAAC,KAAD,CAArC;;AAEA,QAAMG,QAAQ,GAAG,MAAM;AACrBH,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,IAAAA,SAAS;AACV,GAHD;;AAKA,QAAM;AAAEO,IAAAA;AAAF,MAAcR,iBAApB;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEK,WAAjB;AAAA,SAAkCH;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AACE,MAAA,OAAO,EAAEC,OADX;AAEE,MAAA,IAAI,EAAEI,QAFR;AAGE,MAAA,QAAQ,EAAED,YAHZ;AAAA,SAIMN,iBAJN;AAAA,gBAMGQ;AANH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzBQT,kB;;KAAAA,kB;AA2BTA,kBAAkB,CAACU,SAAnB,GAA+B;AAC7BT,EAAAA,iBAAiB,EAAEJ,CAAC,CAACc,KAAF,CAAQ;AACzBF,IAAAA,OAAO,EAAEZ,CAAC,CAACe;AADc,GAAR,EAEhBC,UAH0B;AAI7BX,EAAAA,SAAS,EAAEL,CAAC,CAACiB;AAJgB,CAA/B;AAOAd,kBAAkB,CAACe,YAAnB,GAAkC;AAChCb,EAAAA,SAAS,EAAE,MAAM,CAAE;AADa,CAAlC;AAIA,eAAeF,kBAAf","sourcesContent":["import React, { useState } from 'react';\nimport T from 'prop-types';\nimport { Button, Modal } from 'antd';\n\nfunction ConfirmationButton({ confirmationProps, onConfirm, ...buttonProps }) {\n  const [visible, setVisible] = useState(false);\n\n  const handleClick = () => setVisible(true);\n  const handleCancel = () => setVisible(false);\n\n  const handleOk = () => {\n    setVisible(false);\n    onConfirm();\n  };\n\n  const { content } = confirmationProps;\n  return (\n    <React.Fragment>\n      <Button onClick={handleClick} {...buttonProps} />\n      <Modal\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n        {...confirmationProps}\n      >\n        {content}\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nConfirmationButton.propTypes = {\n  confirmationProps: T.shape({\n    content: T.node,\n  }).isRequired,\n  onConfirm: T.func,\n};\n\nConfirmationButton.defaultProps = {\n  onConfirm: () => {},\n};\n\nexport default ConfirmationButton;\n"]},"metadata":{},"sourceType":"module"}