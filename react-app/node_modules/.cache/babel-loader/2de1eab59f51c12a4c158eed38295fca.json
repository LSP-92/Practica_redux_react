{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/auth/LoginPage/LoginForm.js\";\nimport React from \"react\";\nimport T from \"prop-types\";\nimport { Button, Checkbox } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Form from \"../../shared/Form/Form\";\nimport { Input } from \"antd\";\nimport useForm from \"../../../hooks/useForm\";\nimport styles from \"./LoginForm.module.css\";\nimport { convertLegacyProps } from \"antd/lib/button/button\";\n\nfunction LoginForm({\n  onSubmit\n}) {\n  /*   const canSubmit = () => {\n    return !!(email && password);\n  }; */\n\n  /*   const handleSubmit = (ev) => {\n    ev.preventDefault();\n    onSubmit(form);\n  }; */\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: onSubmit,\n    initialValue: {\n      email: \"\",\n      password: \"\",\n      remember: false\n    },\n    styles: styles.input,\n    children: ({\n      email,\n      password,\n      remember,\n      handleChange\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"email\",\n          className: styles.input,\n          prefix: /*#__PURE__*/_jsxDEV(MailOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this),\n          placeholder: \"Email\",\n          onChange: handleChange,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input.Password, {\n          name: \"password\",\n          className: styles.input,\n          prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 23\n          }, this),\n          placeholder: \"Password\",\n          onChange: handleChange,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"remember\",\n          className: styles.input,\n          onChange: handleChange,\n          checked: remember,\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\" //disabled={!canSubmit()}\n          ,\n          block: true,\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LoginForm;\nexport default LoginForm;\n/* return (\n  <form onSubmit={handleSubmit}>\n    <Input\n      name=\"email\"\n      className={styles.input}\n      prefix={<MailOutlined />}\n      placeholder=\"Email\"\n      onChange={handleChange}\n      value={email}\n    />\n    <Input.Password\n      name=\"password\"\n      className={styles.input}\n      prefix={<LockOutlined />}\n      placeholder=\"Password\"\n      onChange={handleChange}\n      value={password}\n    />\n    <Checkbox\n      name=\"remember\"\n      className={styles.input}\n      onChange={handleChange}\n      checked={remember}\n    >\n      Remember me\n      return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        name=\"email\"\n        className={styles.input}\n        prefix={<MailOutlined />}\n        placeholder=\"Email\"\n        onChange={handleChange}\n        value={email}\n      />\n      <Input.Password\n        name=\"password\"\n        className={styles.input}\n        prefix={<LockOutlined />}\n        placeholder=\"Password\"\n        onChange={handleChange}\n        value={password}\n      />\n      <Checkbox\n        name=\"remember\"\n        className={styles.input}\n        onChange={handleChange}\n        checked={remember}\n      >\n        Remember me\n      </Checkbox>\n      <Button type=\"primary\" htmlType=\"submit\" disabled={!canSubmit()} block>\n        Log In\n      </Button>\n    </form>\n  );\n}\n\nLoginForm.propTypes = {\n  onSubmit: T.func.isRequired,\n}; */\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/auth/LoginPage/LoginForm.js"],"names":["React","T","Button","Checkbox","MailOutlined","LockOutlined","Form","Input","useForm","styles","convertLegacyProps","LoginForm","onSubmit","email","password","remember","input","handleChange"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,MAAjC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,kBAAT,QAAmC,wBAAnC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiC;AAC/B;AACF;AACA;;AAEE;AACF;AACA;AACA;AAEE,sBACE,QAAC,IAAD;AACE,IAAA,QAAQ,EAAEA,QADZ;AAEE,IAAA,YAAY,EAAE;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,QAAQ,EAAE,EAFE;AAGZC,MAAAA,QAAQ,EAAE;AAHE,KAFhB;AAOE,IAAA,MAAM,EAAEN,MAAM,CAACO,KAPjB;AAAA,cASG,CAAC;AAAEH,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,QAAnB;AAA6BE,MAAAA;AAA7B,KAAD,KAAiD;AAChD,0BACE;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,SAAS,EAAER,MAAM,CAACO,KAFpB;AAGE,UAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAHV;AAIE,UAAA,WAAW,EAAC,OAJd;AAKE,UAAA,QAAQ,EAAEC,YALZ;AAME,UAAA,KAAK,EAAEJ;AANT;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,KAAD,CAAO,QAAP;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,SAAS,EAAEJ,MAAM,CAACO,KAFpB;AAGE,UAAA,MAAM,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAHV;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ,EAAEC,YALZ;AAME,UAAA,KAAK,EAAEH;AANT;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE,QAAC,QAAD;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,SAAS,EAAEL,MAAM,CAACO,KAFpB;AAGE,UAAA,QAAQ,EAAEC,YAHZ;AAIE,UAAA,OAAO,EAAEF,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAyBE,QAAC,MAAD;AACE,UAAA,IAAI,EAAC,SADP;AAEE,UAAA,QAAQ,EAAC,QAFX,CAGE;AAHF;AAIE,UAAA,KAAK,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA,sBADF;AAoCD;AA9CH;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD;;KA5DQJ,S;AA8DT,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport T from \"prop-types\";\nimport { Button, Checkbox } from \"antd\";\nimport { MailOutlined, LockOutlined } from \"@ant-design/icons\";\nimport Form from \"../../shared/Form/Form\";\nimport { Input } from \"antd\";\nimport useForm from \"../../../hooks/useForm\";\nimport styles from \"./LoginForm.module.css\";\nimport { convertLegacyProps } from \"antd/lib/button/button\";\n\nfunction LoginForm({ onSubmit }) {\n  /*   const canSubmit = () => {\n    return !!(email && password);\n  }; */\n\n  /*   const handleSubmit = (ev) => {\n    ev.preventDefault();\n    onSubmit(form);\n  }; */\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      initialValue={{\n        email: \"\",\n        password: \"\",\n        remember: false,\n      }}\n      styles={styles.input}\n    >\n      {({ email, password, remember, handleChange }) => {\n        return (\n          <>\n            <Input\n              name=\"email\"\n              className={styles.input}\n              prefix={<MailOutlined />}\n              placeholder=\"Email\"\n              onChange={handleChange}\n              value={email}\n            />\n            <Input.Password\n              name=\"password\"\n              className={styles.input}\n              prefix={<LockOutlined />}\n              placeholder=\"Password\"\n              onChange={handleChange}\n              value={password}\n            />\n            <Checkbox\n              name=\"remember\"\n              className={styles.input}\n              onChange={handleChange}\n              checked={remember}\n            >\n              Remember me\n            </Checkbox>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              //disabled={!canSubmit()}\n              block\n            >\n              Log In\n            </Button>\n          </>\n        );\n      }}\n    </Form>\n  );\n}\n\nexport default LoginForm;\n\n/* return (\n  <form onSubmit={handleSubmit}>\n    <Input\n      name=\"email\"\n      className={styles.input}\n      prefix={<MailOutlined />}\n      placeholder=\"Email\"\n      onChange={handleChange}\n      value={email}\n    />\n    <Input.Password\n      name=\"password\"\n      className={styles.input}\n      prefix={<LockOutlined />}\n      placeholder=\"Password\"\n      onChange={handleChange}\n      value={password}\n    />\n    <Checkbox\n      name=\"remember\"\n      className={styles.input}\n      onChange={handleChange}\n      checked={remember}\n    >\n      Remember me\n      return (\n    <form onSubmit={handleSubmit}>\n      <Input\n        name=\"email\"\n        className={styles.input}\n        prefix={<MailOutlined />}\n        placeholder=\"Email\"\n        onChange={handleChange}\n        value={email}\n      />\n      <Input.Password\n        name=\"password\"\n        className={styles.input}\n        prefix={<LockOutlined />}\n        placeholder=\"Password\"\n        onChange={handleChange}\n        value={password}\n      />\n      <Checkbox\n        name=\"remember\"\n        className={styles.input}\n        onChange={handleChange}\n        checked={remember}\n      >\n        Remember me\n      </Checkbox>\n      <Button type=\"primary\" htmlType=\"submit\" disabled={!canSubmit()} block>\n        Log In\n      </Button>\n    </form>\n  );\n}\n\nLoginForm.propTypes = {\n  onSubmit: T.func.isRequired,\n}; */\n"]},"metadata":{},"sourceType":"module"}