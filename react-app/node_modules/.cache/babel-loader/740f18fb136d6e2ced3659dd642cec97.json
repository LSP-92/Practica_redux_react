{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/adverts/AdvertsPage/AdvertsPage.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Empty, Button, Spin, List, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { mapStateToPropsAdverts } from \"../../../store/connectStore\";\nimport { allAdeverts, tagsAdeverts } from \"../../../store/index\";\nimport storage from \"../../../utils/storage\";\nimport { getAdverts } from \"../../../api/adverts\";\nimport Layout from \"../../layout\";\nimport FiltersForm, { defaultFilters } from \"./FiltersForm\";\nimport AdvertCard from \"./AdvertCard\";\n\nclass AdvertsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      adverts: null,\n      loading: false,\n      error: null,\n      filters: storage.get(\"filters\") || defaultFilters\n    };\n\n    this.formatFilters = () => {\n      const {\n        filters: {\n          name,\n          sale,\n          price,\n          tags\n        }\n      } = this.state;\n      const filters = {};\n\n      if (name) {\n        filters.name = name;\n      }\n\n      if ([\"sell\", \"buy\"].includes(sale)) {\n        filters.sale = sale === \"sell\";\n      }\n\n      if (price.length) {\n        filters.price = price.join(\"-\");\n      }\n\n      if (tags.length) {\n        filters.tags = tags.join(\",\");\n      }\n\n      return filters;\n    };\n\n    this.getAdverts = () => {\n      this.setState({\n        loading: true,\n        error: null\n      });\n      getAdverts(this.formatFilters()).then(({\n        result\n      }) => {\n        this.setState({\n          loading: false,\n          adverts: result.rows\n        });\n        console.log(result.rows, \"¡¡¡¡¡¡¡¡¡\");\n      }).catch(error => this.setState({\n        loading: false,\n        error\n      }));\n    };\n\n    this.handleSubmit = filters => {\n      storage.set(\"filters\", filters);\n      this.setState({\n        filters\n      });\n    };\n\n    this.renderLoading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this);\n\n    this.renderError = () => {\n      const {\n        error\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Empty, {\n        description: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#ff4d4f\"\n          },\n          children: `${error}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 22\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          danger: true,\n          onClick: this.getAdverts,\n          children: \"Reload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderEmpty = () => {\n      const {\n        filters\n      } = this.state;\n      const isFiltered = JSON.stringify(filters) !== JSON.stringify(defaultFilters);\n      return /*#__PURE__*/_jsxDEV(Empty, {\n        description: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No adverts here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 27\n        }, this),\n        children: isFiltered ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Refine your search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/adverts/new\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Create the first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderAdvert = advert => {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/adverts/${advert._id}`,\n          children: /*#__PURE__*/_jsxDEV(AdvertCard, { ...advert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderAdverts = () => {\n      const {\n        adverts,\n        loading,\n        error\n      } = this.state;\n\n      if (loading) {\n        return this.renderLoading();\n      }\n\n      if (error) {\n        return this.renderError();\n      }\n\n      if (!adverts) {\n        return null;\n      }\n\n      if (!adverts.length) {\n        return this.renderEmpty();\n      }\n\n      return /*#__PURE__*/_jsxDEV(List, {\n        grid: {\n          gutter: 16,\n          column: 3\n        },\n        dataSource: adverts,\n        renderItem: this.renderAdvert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true,\n      error: null\n    });\n    this.props.newAdeverts(getAdverts().then(data => {\n      this.setState({\n        loading: false,\n        error: null\n      });\n      return data.result;\n    }).catch(err => {\n      this.setState({\n        loading: false,\n        error: err\n      });\n    }));\n  }\n\n  componentDidUpdate(prevProps, {\n    filters: prevFilters\n  }) {\n    const {\n      filters\n    } = this.state;\n\n    if (JSON.stringify(filters) !== JSON.stringify(prevFilters)) {\n      this.getAdverts();\n    }\n  }\n\n  render() {\n    console.log(this.props.allAdeverts, \"PROPS\");\n    const {\n      filters\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Adverts list\",\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Filter your adverts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FiltersForm, {\n        initialFilters: filters,\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Adverts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), this.renderAdverts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    allAdeverts: payload => dispatch(allAdeverts(payload))\n  };\n};\n\nexport default connect(mapStateToPropsAdverts, mapDispatchToProps)(AdvertsPage);","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/adverts/AdvertsPage/AdvertsPage.js"],"names":["React","Link","Empty","Button","Spin","List","Divider","connect","mapStateToPropsAdverts","allAdeverts","tagsAdeverts","storage","getAdverts","Layout","FiltersForm","defaultFilters","AdvertCard","AdvertsPage","Component","state","adverts","loading","error","filters","get","formatFilters","name","sale","price","tags","includes","length","join","setState","then","result","rows","console","log","catch","handleSubmit","set","renderLoading","display","justifyContent","renderError","color","renderEmpty","isFiltered","JSON","stringify","renderAdvert","advert","_id","renderAdverts","gutter","column","componentDidMount","props","newAdeverts","data","err","componentDidUpdate","prevProps","prevFilters","render","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Empty, Button, Spin, List, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { mapStateToPropsAdverts } from \"../../../store/connectStore\";\nimport { allAdeverts, tagsAdeverts } from \"../../../store/index\";\nimport storage from \"../../../utils/storage\";\nimport { getAdverts } from \"../../../api/adverts\";\nimport Layout from \"../../layout\";\nimport FiltersForm, { defaultFilters } from \"./FiltersForm\";\nimport AdvertCard from \"./AdvertCard\";\n\nclass AdvertsPage extends React.Component {\n  state = {\n    adverts: null,\n    loading: false,\n    error: null,\n    filters: storage.get(\"filters\") || defaultFilters,\n  };\n\n  formatFilters = () => {\n    const {\n      filters: { name, sale, price, tags },\n    } = this.state;\n\n    const filters = {};\n    if (name) {\n      filters.name = name;\n    }\n    if ([\"sell\", \"buy\"].includes(sale)) {\n      filters.sale = sale === \"sell\";\n    }\n    if (price.length) {\n      filters.price = price.join(\"-\");\n    }\n    if (tags.length) {\n      filters.tags = tags.join(\",\");\n    }\n\n    return filters;\n  };\n\n  getAdverts = () => {\n    this.setState({ loading: true, error: null });\n    getAdverts(this.formatFilters())\n      .then(({ result }) => {\n        this.setState({ loading: false, adverts: result.rows });\n        console.log(result.rows, \"¡¡¡¡¡¡¡¡¡\");\n      })\n      .catch((error) => this.setState({ loading: false, error }));\n  };\n\n  handleSubmit = (filters) => {\n    storage.set(\"filters\", filters);\n    this.setState({ filters });\n  };\n\n  renderLoading = () => (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Spin size=\"large\" />\n    </div>\n  );\n\n  renderError = () => {\n    const { error } = this.state;\n    return (\n      <Empty\n        description={<span style={{ color: \"#ff4d4f\" }}>{`${error}`}</span>}\n      >\n        <Button type=\"primary\" danger onClick={this.getAdverts}>\n          Reload\n        </Button>\n      </Empty>\n    );\n  };\n\n  renderEmpty = () => {\n    const { filters } = this.state;\n    const isFiltered =\n      JSON.stringify(filters) !== JSON.stringify(defaultFilters);\n    return (\n      <Empty description={<span>No adverts here!</span>}>\n        {isFiltered ? (\n          <span>Refine your search</span>\n        ) : (\n          <Link to=\"/adverts/new\">\n            <Button type=\"primary\">Create the first one</Button>\n          </Link>\n        )}\n      </Empty>\n    );\n  };\n\n  renderAdvert = (advert) => {\n    return (\n      <List.Item>\n        <Link to={`/adverts/${advert._id}`}>\n          <AdvertCard {...advert} />\n        </Link>\n      </List.Item>\n    );\n  };\n\n  renderAdverts = () => {\n    const { adverts, loading, error } = this.state;\n\n    if (loading) {\n      return this.renderLoading();\n    }\n\n    if (error) {\n      return this.renderError();\n    }\n\n    if (!adverts) {\n      return null;\n    }\n\n    if (!adverts.length) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <List\n        grid={{ gutter: 16, column: 3 }}\n        dataSource={adverts}\n        renderItem={this.renderAdvert}\n      />\n    );\n  };\n\n  async componentDidMount() {\n    this.setState({ loading: true, error: null });\n    this.props.newAdeverts(\n      getAdverts()\n        .then((data) => {\n          this.setState({ loading: false, error: null });\n          return data.result;\n        })\n        .catch((err) => {\n          this.setState({ loading: false, error: err });\n        })\n    );\n  }\n\n  componentDidUpdate(prevProps, { filters: prevFilters }) {\n    const { filters } = this.state;\n    if (JSON.stringify(filters) !== JSON.stringify(prevFilters)) {\n      this.getAdverts();\n    }\n  }\n\n  render() {\n    console.log(this.props.allAdeverts, \"PROPS\");\n    const { filters } = this.state;\n    return (\n      <Layout title=\"Adverts list\">\n        <Divider>Filter your adverts</Divider>\n        <FiltersForm initialFilters={filters} onSubmit={this.handleSubmit} />\n        <Divider>Adverts</Divider>\n        {this.renderAdverts()}\n      </Layout>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    allAdeverts: (payload) => dispatch(allAdeverts(payload)),\n  };\n};\nexport default connect(mapStateToPropsAdverts, mapDispatchToProps)(AdvertsPage);\n"]},"metadata":{},"sourceType":"module"}