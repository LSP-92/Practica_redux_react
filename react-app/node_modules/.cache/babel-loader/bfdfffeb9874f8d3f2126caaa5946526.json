{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/App/App.js\";\nimport React from 'react';\nimport T from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { PrivateRoute, LoginPage } from '../auth';\nimport { AdvertPage, AdvertsPage, NewAdvertPage } from '../adverts';\nimport { AuthContextProvider } from '../../contexts/auth';\nimport NotFoundPage from './NotFoundPage';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLogged: this.props.isInitiallyLogged\n    };\n\n    this.handleLogin = cb => {\n      this.setState({\n        isLogged: true\n      }, cb);\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLogged: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      isLogged\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n      value: {\n        isLogged,\n        onLogin: this.handleLogin,\n        onLogout: this.handleLogout\n      },\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/adverts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          exact: true,\n          children: routerProps => /*#__PURE__*/_jsxDEV(LoginPage, {\n            onLogin: this.handleLogin,\n            ...routerProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/adverts\",\n          exact: true,\n          children: /*#__PURE__*/_jsxDEV(AdvertsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/adverts/new\",\n          exact: true,\n          component: NewAdvertPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n          path: \"/adverts/:id\",\n          exact: true,\n          component: AdvertPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/404\",\n          exact: true,\n          children: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/404\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nApp.propTypes = {\n  isInitiallyLogged: T.bool\n};\nexport default App;","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/App/App.js"],"names":["React","T","Switch","Route","Redirect","PrivateRoute","LoginPage","AdvertPage","AdvertsPage","NewAdvertPage","AuthContextProvider","NotFoundPage","App","Component","state","isLogged","props","isInitiallyLogged","handleLogin","cb","setState","handleLogout","render","onLogin","onLogout","routerProps","propTypes","bool"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AAEA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,SAAxC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,aAAlC,QAAuD,YAAvD;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC;AADf,KADwB;;AAAA,SAKhCC,WALgC,GAKlBC,EAAE,IAAI;AAClB,WAAKC,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd,EAAkCI,EAAlC;AACD,KAP+B;;AAAA,SAShCE,YATgC,GASjB,MAAM;AACnB,WAAKD,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAX+B;AAAA;;AAahCO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AACA,wBACE,QAAC,mBAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QADK;AAELQ,QAAAA,OAAO,EAAE,KAAKL,WAFT;AAGLM,QAAAA,QAAQ,EAAE,KAAKH;AAHV,OADT;AAAA,6BAOE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAAA,oBACGI,WAAW,iBACV,QAAC,SAAD;AAAW,YAAA,OAAO,EAAE,KAAKP,WAAzB;AAAA,eAA0CO;AAA1C;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,KAAK,MAAnC;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAYE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,cAAnB;AAAkC,UAAA,KAAK,MAAvC;AAAwC,UAAA,SAAS,EAAEhB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAC,cAAnB;AAAkC,UAAA,KAAK,MAAvC;AAAwC,UAAA,SAAS,EAAEF;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,MAAxB;AAAA,oBACGI;AADH;AAAA;AAAA;AAAA;AAAA,gBAdF,eAiBE,QAAC,KAAD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AA9C+B;;AAiDlCC,GAAG,CAACc,SAAJ,GAAgB;AACdT,EAAAA,iBAAiB,EAAEhB,CAAC,CAAC0B;AADP,CAAhB;AAIA,eAAef,GAAf","sourcesContent":["import React from 'react';\nimport T from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { PrivateRoute, LoginPage } from '../auth';\nimport { AdvertPage, AdvertsPage, NewAdvertPage } from '../adverts';\nimport { AuthContextProvider } from '../../contexts/auth';\nimport NotFoundPage from './NotFoundPage';\n\nclass App extends React.Component {\n  state = {\n    isLogged: this.props.isInitiallyLogged,\n  };\n\n  handleLogin = cb => {\n    this.setState({ isLogged: true }, cb);\n  };\n\n  handleLogout = () => {\n    this.setState({ isLogged: false });\n  };\n\n  render() {\n    const { isLogged } = this.state;\n    return (\n      <AuthContextProvider\n        value={{\n          isLogged,\n          onLogin: this.handleLogin,\n          onLogout: this.handleLogout,\n        }}\n      >\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/adverts\" />\n          </Route>\n          <Route path=\"/login\" exact>\n            {routerProps => (\n              <LoginPage onLogin={this.handleLogin} {...routerProps} />\n            )}\n          </Route>\n          <PrivateRoute path=\"/adverts\" exact>\n            <AdvertsPage />\n          </PrivateRoute>\n          <PrivateRoute path=\"/adverts/new\" exact component={NewAdvertPage} />\n          <PrivateRoute path=\"/adverts/:id\" exact component={AdvertPage} />\n          <Route path=\"/404\" exact>\n            {NotFoundPage}\n          </Route>\n          <Route>\n            <Redirect to=\"/404\" />\n          </Route>\n        </Switch>\n      </AuthContextProvider>\n    );\n  }\n}\n\nApp.propTypes = {\n  isInitiallyLogged: T.bool,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}