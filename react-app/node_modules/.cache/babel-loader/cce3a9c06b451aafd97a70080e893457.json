{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/auth/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { mapStateToPropsAuth } from \"../../store/connectStore\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  state,\n  ...props\n}) => {\n  _s();\n\n  console.log(state, \"dentro de privaterouter\");\n  const isLogged = state;\n  const location = useLocation();\n  return isLogged.auth ? /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/login\",\n      state: {\n        from: location\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoute;\nconst wrapper = connect(mapStateToPropsAuth);\nconst HocPrivateRouter = wrapper(PrivateRoute);\n_c2 = HocPrivateRouter;\nexport default HocPrivateRouter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"HocPrivateRouter\");","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/auth/PrivateRoute.js"],"names":["React","Route","Redirect","useLocation","mapStateToPropsAuth","connect","PrivateRoute","state","props","console","log","isLogged","location","auth","pathname","from","wrapper","HocPrivateRouter"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmB,yBAAnB;AACA,QAAMI,QAAQ,GAAGJ,KAAjB;AACA,QAAMK,QAAQ,GAAGT,WAAW,EAA5B;AACA,SAAOQ,QAAQ,CAACE,IAAT,gBACL,QAAC,KAAD,OAAWL;AAAX;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEM,MAAAA,QAAQ,EAAE,QAAZ;AAAsBP,MAAAA,KAAK,EAAE;AAAEQ,QAAAA,IAAI,EAAEH;AAAR;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD,CATD;;GAAMN,Y;UAGaH,W;;;KAHbG,Y;AAWN,MAAMU,OAAO,GAAGX,OAAO,CAACD,mBAAD,CAAvB;AACA,MAAMa,gBAAgB,GAAGD,OAAO,CAACV,YAAD,CAAhC;MAAMW,gB;AACN,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { mapStateToPropsAuth } from \"../../store/connectStore\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ state, ...props }) => {\n  console.log(state, \"dentro de privaterouter\");\n  const isLogged = state;\n  const location = useLocation();\n  return isLogged.auth ? (\n    <Route {...props} />\n  ) : (\n    <Redirect to={{ pathname: \"/login\", state: { from: location } }} />\n  );\n};\n\nconst wrapper = connect(mapStateToPropsAuth);\nconst HocPrivateRouter = wrapper(PrivateRoute);\nexport default HocPrivateRouter;\n"]},"metadata":{},"sourceType":"module"}