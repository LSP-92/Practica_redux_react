{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/adverts/NewAdvertPage/NewAdvertPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport T from \"prop-types\";\nimport { Alert, Divider } from \"antd\";\nimport { store, newAdeverts } from \"../../../store\";\nimport { createAdvert } from \"../../../api/adverts\";\nimport Layout from \"../../layout\";\nimport NewAdvertForm from \"./NewAdvertForm\";\n\nconst NewAdvertPage = () => {\n  _s();\n\n  const [state, setState] = useState({\n    error: null\n  });\n\n  const handleSubmit = advert => {\n    const {\n      history\n    } = this.props;\n    this.resetError();\n    createAdvert(advert).then(({\n      result: advert\n    }) => {\n      store.dispatch(newAdeverts(advert));\n      history.push(`/adverts/${advert._id}`);\n    }).catch(error => {\n      console.log(error);\n    }); //this.setState({ error }));\n  };\n\n  const resetError = () => setState({\n    error: null\n  });\n\n  const {\n    error\n  } = state;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"New advert\",\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      children: \"Create an advert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewAdvertForm, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      afterClose: resetError,\n      closable: true,\n      message: error,\n      showIcon: true,\n      type: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n/* class NewAdvertPage extends React.Component {\n  state = {\n    error: null,\n  };\n\n  handleSubmit = (advert) => {\n    const { history } = this.props;\n    this.resetError();\n    createAdvert(advert)\n      .then(({ result: advert }) => {\n        store.dispatch(newAdeverts(advert));\n        history.push(`/adverts/${advert._id}`);\n      })\n      .catch((error) => {\n        console.log(error);\n      }); //this.setState({ error }));\n  };\n\n  resetError = () => this.setState({ error: null });\n\n  render() {\n    const { error } = this.state;\n    return (\n      <Layout title=\"New advert\">\n        <Divider>Create an advert</Divider>\n        <NewAdvertForm onSubmit={this.handleSubmit} />\n        {error && (\n          <Alert\n            afterClose={this.resetError}\n            closable\n            message={error}\n            showIcon\n            type=\"error\"\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nNewAdvertPage.propTypes = {\n  history: T.shape({ push: T.func.isRequired }).isRequired,\n}; */\n\n\n_s(NewAdvertPage, \"fBC6wneCJzQeOfHB7Vkqn6mJbOY=\");\n\n_c = NewAdvertPage;\nexport default NewAdvertPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewAdvertPage\");","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/adverts/NewAdvertPage/NewAdvertPage.js"],"names":["React","useState","T","Alert","Divider","store","newAdeverts","createAdvert","Layout","NewAdvertForm","NewAdvertPage","state","setState","error","handleSubmit","advert","history","props","resetError","then","result","dispatch","push","_id","catch","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,MAA/B;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,gBAAnC;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;AACjCY,IAAAA,KAAK,EAAE;AAD0B,GAAD,CAAlC;;AAIA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,SAAKC,UAAL;AACAX,IAAAA,YAAY,CAACQ,MAAD,CAAZ,CACGI,IADH,CACQ,CAAC;AAAEC,MAAAA,MAAM,EAAEL;AAAV,KAAD,KAAwB;AAC5BV,MAAAA,KAAK,CAACgB,QAAN,CAAef,WAAW,CAACS,MAAD,CAA1B;AACAC,MAAAA,OAAO,CAACM,IAAR,CAAc,YAAWP,MAAM,CAACQ,GAAI,EAApC;AACD,KAJH,EAKGC,KALH,CAKUX,KAAD,IAAW;AAChBY,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACD,KAPH,EAH+B,CAUzB;AACP,GAXD;;AAaA,QAAMK,UAAU,GAAG,MAAMN,QAAQ,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAjC;;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAYF,KAAlB;AACA,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA,4BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEG;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGD,KAAK,iBACJ,QAAC,KAAD;AACE,MAAA,UAAU,EAAEK,UADd;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,OAAO,EAAEL,KAHX;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAnCD;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GA/EMH,a;;KAAAA,a;AAiFN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport T from \"prop-types\";\nimport { Alert, Divider } from \"antd\";\nimport { store, newAdeverts } from \"../../../store\";\nimport { createAdvert } from \"../../../api/adverts\";\nimport Layout from \"../../layout\";\nimport NewAdvertForm from \"./NewAdvertForm\";\n\nconst NewAdvertPage = () => {\n  const [state, setState] = useState({\n    error: null,\n  });\n\n  const handleSubmit = (advert) => {\n    const { history } = this.props;\n    this.resetError();\n    createAdvert(advert)\n      .then(({ result: advert }) => {\n        store.dispatch(newAdeverts(advert));\n        history.push(`/adverts/${advert._id}`);\n      })\n      .catch((error) => {\n        console.log(error);\n      }); //this.setState({ error }));\n  };\n\n  const resetError = () => setState({ error: null });\n  const { error } = state;\n  return (\n    <Layout title=\"New advert\">\n      <Divider>Create an advert</Divider>\n      <NewAdvertForm onSubmit={handleSubmit} />\n      {error && (\n        <Alert\n          afterClose={resetError}\n          closable\n          message={error}\n          showIcon\n          type=\"error\"\n        />\n      )}\n    </Layout>\n  );\n};\n\n/* class NewAdvertPage extends React.Component {\n  state = {\n    error: null,\n  };\n\n  handleSubmit = (advert) => {\n    const { history } = this.props;\n    this.resetError();\n    createAdvert(advert)\n      .then(({ result: advert }) => {\n        store.dispatch(newAdeverts(advert));\n        history.push(`/adverts/${advert._id}`);\n      })\n      .catch((error) => {\n        console.log(error);\n      }); //this.setState({ error }));\n  };\n\n  resetError = () => this.setState({ error: null });\n\n  render() {\n    const { error } = this.state;\n    return (\n      <Layout title=\"New advert\">\n        <Divider>Create an advert</Divider>\n        <NewAdvertForm onSubmit={this.handleSubmit} />\n        {error && (\n          <Alert\n            afterClose={this.resetError}\n            closable\n            message={error}\n            showIcon\n            type=\"error\"\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n\nNewAdvertPage.propTypes = {\n  history: T.shape({ push: T.func.isRequired }).isRequired,\n}; */\n\nexport default NewAdvertPage;\n"]},"metadata":{},"sourceType":"module"}