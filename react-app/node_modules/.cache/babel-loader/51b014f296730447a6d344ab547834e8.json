{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/adverts/AdvertsPage/AdvertsPage.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Empty, Button, Spin, List, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { mapStateToPropsAdverts } from \"../../../store/connectStore\";\nimport { allAdeverts, tagsAdverts } from \"../../../store/index\";\nimport storage from \"../../../utils/storage\";\nimport { getAdverts, getTags } from \"../../../api/adverts\";\nimport Layout from \"../../layout\";\nimport FiltersForm from \"./FiltersForm\";\nimport AdvertCard from \"./AdvertCard\";\n\nclass AdvertsPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: false,\n      error: null\n    };\n\n    this.formatFilters = () => {\n      console.log(this.props);\n      const {\n        filters: {\n          name,\n          sale,\n          price,\n          tags\n        }\n      } = this.props;\n      const filters = {};\n\n      if (name) {\n        filters.name = name;\n      }\n\n      if ([\"sell\", \"buy\"].includes(sale)) {\n        filters.sale = sale === \"sell\";\n      }\n\n      if (price.length) {\n        filters.price = price.join(\"-\");\n      }\n\n      if (tags.length) {\n        filters.tags = tags.join(\",\");\n      }\n\n      return filters;\n    };\n\n    this.getAdverts = () => {\n      this.setState({\n        loading: true,\n        error: null\n      });\n      getAdverts(this.formatFilters()).then(({\n        result\n      }) => {\n        this.setState({\n          loading: false,\n          error: null\n        });\n        this.props.allAdeverts(result.rows);\n      }).catch(err => {\n        this.setState({\n          loading: false,\n          error: err\n        });\n      });\n    };\n\n    this.handleSubmit = filters => {\n      console.log(filters);\n      storage.set(\"filters\", filters);\n      this.props.tagsAdverts(filters);\n    };\n\n    this.renderLoading = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this);\n\n    this.renderError = () => {\n      const {\n        error\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Empty, {\n        description: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"#ff4d4f\"\n          },\n          children: `${error}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          danger: true,\n          onClick: this.getAdverts,\n          children: \"Reload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderEmpty = () => {\n      const {\n        filters\n      } = this.props;\n      const isFiltered = filters;\n      console.log(filters, \"******\");\n      return /*#__PURE__*/_jsxDEV(Empty, {\n        description: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No adverts here!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 27\n        }, this),\n        children: isFiltered ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Refine your search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/adverts/new\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            children: \"Create the first one\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderAdvert = advert => {\n      return /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/adverts/${advert._id}`,\n          children: /*#__PURE__*/_jsxDEV(AdvertCard, { ...advert\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderAdverts = () => {\n      const {\n        loading,\n        error\n      } = this.state;\n      const {\n        adverts\n      } = this.props.adverts;\n\n      if (loading) {\n        return this.renderLoading();\n      }\n\n      if (error) {\n        return this.renderError();\n      }\n\n      if (!adverts) {\n        return null;\n      }\n\n      if (!adverts) {\n        return this.renderEmpty();\n      }\n\n      return /*#__PURE__*/_jsxDEV(List, {\n        grid: {\n          gutter: 16,\n          column: 3\n        },\n        dataSource: adverts,\n        renderItem: this.renderAdvert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  componentDidMount() {\n    this.getAdverts();\n    getTags().then(({\n      result\n    }) => {\n      this.props.tagsAdverts(result);\n    }).catch(err => this.setState({\n      error: err\n    }));\n  }\n\n  componentDidUpdate(prevProps, {\n    filters: prevFilters\n  }) {\n    const {\n      filters\n    } = this.props;\n\n    if (filters !== prevFilters) {\n      this.getAdverts();\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      filters\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: \"Adverts list\",\n      children: [/*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Filter your adverts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FiltersForm, {\n        initialFilters: filters,\n        onSubmit: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        children: \"Adverts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), this.renderAdverts()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    allAdeverts: payload => dispatch(allAdeverts(payload)),\n    tagsAdverts: payload => dispatch(tagsAdverts(payload))\n  };\n};\n\nexport default connect(mapStateToPropsAdverts, mapDispatchToProps)(AdvertsPage);","map":{"version":3,"sources":["/home/lsp-92/Proyectos/practica-react-avanzado/react-app/src/components/adverts/AdvertsPage/AdvertsPage.js"],"names":["React","Link","Empty","Button","Spin","List","Divider","connect","mapStateToPropsAdverts","allAdeverts","tagsAdverts","storage","getAdverts","getTags","Layout","FiltersForm","AdvertCard","AdvertsPage","Component","state","loading","error","formatFilters","console","log","props","filters","name","sale","price","tags","includes","length","join","setState","then","result","rows","catch","err","handleSubmit","set","renderLoading","display","justifyContent","renderError","color","renderEmpty","isFiltered","renderAdvert","advert","_id","renderAdverts","adverts","gutter","column","componentDidMount","componentDidUpdate","prevProps","prevFilters","render","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Empty, Button, Spin, List, Divider } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { mapStateToPropsAdverts } from \"../../../store/connectStore\";\nimport { allAdeverts, tagsAdverts } from \"../../../store/index\";\nimport storage from \"../../../utils/storage\";\nimport { getAdverts, getTags } from \"../../../api/adverts\";\nimport Layout from \"../../layout\";\nimport FiltersForm from \"./FiltersForm\";\nimport AdvertCard from \"./AdvertCard\";\n\nclass AdvertsPage extends React.Component {\n  state = {\n    loading: false,\n    error: null,\n  };\n\n  formatFilters = () => {\n    console.log(this.props);\n    const {\n      filters: { name, sale, price, tags },\n    } = this.props;\n\n    const filters = {};\n    if (name) {\n      filters.name = name;\n    }\n    if ([\"sell\", \"buy\"].includes(sale)) {\n      filters.sale = sale === \"sell\";\n    }\n    if (price.length) {\n      filters.price = price.join(\"-\");\n    }\n    if (tags.length) {\n      filters.tags = tags.join(\",\");\n    }\n\n    return filters;\n  };\n\n  getAdverts = () => {\n    this.setState({ loading: true, error: null });\n    getAdverts(this.formatFilters())\n      .then(({ result }) => {\n        this.setState({ loading: false, error: null });\n        this.props.allAdeverts(result.rows);\n      })\n      .catch((err) => {\n        this.setState({ loading: false, error: err });\n      });\n  };\n\n  handleSubmit = (filters) => {\n    console.log(filters);\n    storage.set(\"filters\", filters);\n    this.props.tagsAdverts(filters);\n  };\n\n  renderLoading = () => (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <Spin size=\"large\" />\n    </div>\n  );\n\n  renderError = () => {\n    const { error } = this.state;\n    return (\n      <Empty\n        description={<span style={{ color: \"#ff4d4f\" }}>{`${error}`}</span>}\n      >\n        <Button type=\"primary\" danger onClick={this.getAdverts}>\n          Reload\n        </Button>\n      </Empty>\n    );\n  };\n\n  renderEmpty = () => {\n    const { filters } = this.props;\n    const isFiltered = filters;\n    console.log(filters, \"******\");\n    return (\n      <Empty description={<span>No adverts here!</span>}>\n        {isFiltered ? (\n          <span>Refine your search</span>\n        ) : (\n          <Link to=\"/adverts/new\">\n            <Button type=\"primary\">Create the first one</Button>\n          </Link>\n        )}\n      </Empty>\n    );\n  };\n\n  renderAdvert = (advert) => {\n    return (\n      <List.Item>\n        <Link to={`/adverts/${advert._id}`}>\n          <AdvertCard {...advert} />\n        </Link>\n      </List.Item>\n    );\n  };\n\n  renderAdverts = () => {\n    const { loading, error } = this.state;\n    const { adverts } = this.props.adverts;\n    if (loading) {\n      return this.renderLoading();\n    }\n    if (error) {\n      return this.renderError();\n    }\n\n    if (!adverts) {\n      return null;\n    }\n\n    if (!adverts) {\n      return this.renderEmpty();\n    }\n\n    return (\n      <List\n        grid={{ gutter: 16, column: 3 }}\n        dataSource={adverts}\n        renderItem={this.renderAdvert}\n      />\n    );\n  };\n  componentDidMount() {\n    this.getAdverts();\n    getTags()\n      .then(({ result }) => {\n        this.props.tagsAdverts(result);\n      })\n      .catch((err) => this.setState({ error: err }));\n  }\n\n  componentDidUpdate(prevProps, { filters: prevFilters }) {\n    const { filters } = this.props;\n    if (filters !== prevFilters) {\n      this.getAdverts();\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    const { filters } = this.props;\n    return (\n      <Layout title=\"Adverts list\">\n        <Divider>Filter your adverts</Divider>\n        <FiltersForm initialFilters={filters} onSubmit={this.handleSubmit} />\n        <Divider>Adverts</Divider>\n        {this.renderAdverts()}\n      </Layout>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    allAdeverts: (payload) => dispatch(allAdeverts(payload)),\n    tagsAdverts: (payload) => dispatch(tagsAdverts(payload)),\n  };\n};\nexport default connect(mapStateToPropsAdverts, mapDispatchToProps)(AdvertsPage);\n"]},"metadata":{},"sourceType":"module"}